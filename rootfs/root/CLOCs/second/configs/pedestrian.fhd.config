model: {
  second: {
    voxel_generator {
      point_cloud_range : [0, -40, -3, 70.4, 40, 1]
      #point_cloud_range : [0, -32.0, -3, 52.8, 32.0, 1]
      voxel_size : [0.05, 0.05, 0.1]
      max_number_of_points_per_voxel : 5
    }

    voxel_feature_extractor: {
      module_class_name: "VoxelFeatureExtractorV3"
      num_filters: [16]
      with_distance: false
      num_input_features: 4
    }
    middle_feature_extractor: {
      module_class_name: "SpMiddleFHD"
      # num_filters_down1: [] # protobuf don't support empty list.
      # num_filters_down2: []
      downsample_factor: 8
      num_input_features: 4
    }
    rpn: {
      module_class_name: "RPNV2"
      layer_nums: [5, 5]
      layer_strides: [1, 2]
      num_filters: [128, 256]
      upsample_strides: [1, 2]
      num_upsample_filters: [256, 256]
      use_groupnorm: false
      num_groups: 32
      num_input_features: 128
    }
    loss: {
      classification_loss: {
        weighted_sigmoid_focal: {
          alpha: 0.25
          gamma: 2.0
          anchorwise_output: true
        }
      }
      localization_loss: {
        weighted_smooth_l1: {
          sigma: 3.0
          code_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        }
      }
      classification_weight: 1.0
      localization_weight: 2.0
    }
    # Outputs
    use_sigmoid_score: true
    encode_background_as_zeros: true
    encode_rad_error_by_sin: true

    use_direction_classifier: true # this can help for orientation benchmark
    direction_loss_weight: 0.2 # enough.
    use_aux_classifier: false
    # Loss
    pos_class_weight: 1.0
    neg_class_weight: 1.0

    loss_norm_type: NormByNumPositives
    # Postprocess
    post_center_limit_range: [0, -40, -3.0, 70.4, 40, 0.0]
    use_rotate_nms: true
    use_multi_class_nms: false
    nms_pre_max_size: 1000
    nms_post_max_size: 100
    nms_score_threshold: 0.3 # 0.4 in submit, but 0.3 can get better hard performance
    nms_iou_threshold: 0.1  # for car class, this is 0.01

    use_bev: false
    num_point_features: 4
    without_reflectivity: false
    box_coder: {
      ground_box3d_coder: {
        linear_dim: false
        encode_angle_vector: false
      }
    }
    target_assigner: {
      anchor_generators: {
        anchor_generator_range: {
          sizes: [0.6, 0.8, 1.73] # wlh
          anchor_ranges: [0, -40.0, -1.78, 70.4, 40.0, -1.78] # carefully set z center
          #anchor_ranges: [0, -32.0, -1.45, 52.8, 32.0, -1.45] # carefully set z center
          rotations: [0, 1.57] # DON'T modify this unless you are very familiar with my code.
          matched_threshold : 0.35
          unmatched_threshold : 0.2
          class_name: "Pedestrian"
        }
      }
      sample_positive_fraction : -1
      sample_size : 512
      region_similarity_calculator: {
        nearest_iou_similarity: {
        }
      }
    }
  }
}


train_input_reader: {
  max_num_epochs : 160
  batch_size: 1 # sparse conv use 7633MB GPU memory when batch_size=3
  prefetch_size : 25
  max_number_of_voxels: 23000 # to support batchsize=2 in 1080Ti
  shuffle_points: true
  num_workers: 1
  groundtruth_localization_noise_std: [1.0, 1.0, 0.5]
  # groundtruth_rotation_uniform_noise: [-0.3141592654, 0.3141592654]
  groundtruth_rotation_uniform_noise: [-0.78539816, 0.78539816]
  global_rotation_uniform_noise: [-0.78539816, 0.78539816]
  global_scaling_uniform_noise: [0.95, 1.05]
  global_random_rotation_range_per_object: [0, 0] # pi/4 ~ 3pi/4
  anchor_area_threshold: -1 # very slow if enable when using FHD map (1600x1200x40).
  remove_points_after_sample: true
  groundtruth_points_drop_percentage: 0.0
  groundtruth_drop_max_keep_points: 15
  database_sampler {
    database_info_path: "/root/dataset/KITTI_DATASET/kitti_dbinfos_train.pkl"
    sample_groups {
      name_to_max_num {
        key: "Pedestrian"
        value: 6
      }
    }
    database_prep_steps {
      filter_by_min_num_points {
        min_num_point_pairs {
          key: "Pedestrian"
          value: 10
        }
      }
    }
    database_prep_steps {
      filter_by_difficulty {
        removed_difficulties: [-1]
      }
    }
    global_random_rotation_range_per_object: [0, 0]
    rate: 1.0
  }

  remove_unknown_examples: false
  remove_environment: false
  kitti_info_path: "/root/dataset/KITTI_DATASET/kitti_infos_train.pkl"
  kitti_root_path: "/root/dataset/KITTI_DATASET"
}

train_config: {
  optimizer: {
    adam_optimizer: {
      learning_rate: {
        one_cycle: {
          lr_max: 3e-3
          moms: [0.95, 0.85]
          div_factor: 10.0
          pct_start: 0.4
        }
      }
      weight_decay: 0.01
    }
    fixed_weight_decay: true
    use_moving_average: false
  }
  steps: 111360 # 928 * 80
  steps_per_eval: 7424 # 3712 # 1238 * 5
  save_checkpoints_secs : 1800 # half hour
  save_summary_steps : 10
  enable_mixed_precision: false # for fp16 training, don't use this.
  loss_scale_factor : 512.0
  clear_metrics_every_epoch: true
  #detection_2d_path: "../2d_detection_ped_cyc"
  detection_2d_path: "../mscnn_ped_cyc"
}

eval_input_reader: {
  batch_size: 1
  max_num_epochs : 160
  prefetch_size : 25
  max_number_of_voxels: 40000
  shuffle_points: false
  num_workers: 1
  anchor_area_threshold: -1
  remove_environment: false
  kitti_info_path: "/root/dataset/KITTI_DATASET/kitti_infos_val.pkl"
  kitti_root_path: "/root/dataset/KITTI_DATASET"
}
